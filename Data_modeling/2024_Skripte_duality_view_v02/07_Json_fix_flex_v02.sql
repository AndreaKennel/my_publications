-- Script 07_Json_fix_flex.sql
-- For presentation duality view
-- Andrea Kennel
-- 24.04.2024

-- 31.07.2024: Duality View braucht neu als Schlüssel das Attribut _id
-- 31.07.2024: more_info muss JSON (OBJECT) sein, JSON genügt nicht


-- DROP VIEW product_final_dv;
-- DROP TABLE port_group_final;
-- DROP TABLE product_final;
-- ---------------------------------------------------------------------------------------
-- TABLES WITH JSON
-- ---------------------------------------------------------------------------------------

CREATE TABLE product_final (
  prod_id          NUMBER(10) GENERATED BY DEFAULT ON NULL AS 
                              IDENTITY (START WITH 10 INCREMENT BY 1),
  type             VARCHAR2(50),
  name             VARCHAR2(50),
  description      VARCHAR2(200),
  manufacturer     VARCHAR2(50),
  price            NUMBER (8,2),
  more_info        JSON (OBJECT)
  CONSTRAINT prfi_ensure_json CHECK (more_info IS JSON)
);

CREATE TABLE port_group_final (
  pogr_id      NUMBER(10) GENERATED BY DEFAULT ON NULL AS 
                          IDENTITY (START WITH 10 INCREMENT BY 1),
  prod_id      NUMBER(10),
  amount       NUMBER(3),
  type         VARCHAR2(50),
  speeds       VARCHAR2(200),
  more_info    JSON (OBJECT)
  CONSTRAINT pofi_ensure_json CHECK (more_info IS JSON)
);

ALTER TABLE product_final ADD CONSTRAINT prodfi_pk PRIMARY KEY (prod_id);
ALTER TABLE port_group_final ADD CONSTRAINT pogrfi_pk PRIMARY KEY (pogr_id);
ALTER TABLE port_group_final ADD CONSTRAINT pogrfi_prod_fk FOREIGN KEY (prod_id) 
  REFERENCES product_final (prod_id);


-- 
-- DUALITY VIEW
-- 

CREATE OR replace json relational DUALITY VIEW product_final_dv AS
SELECT json {'_id'	    	: p.prod_id,
             'type' 		: p.type,
             'name'   		: p.name,
             'description'	: p.description,
             'manufacturer'	: p.manufacturer,
             'price'		: p.price,
             'more_info'     @flex,
             'port_group' :
               [ SELECT json {'pogr_id' : pg.pogr_id,
                              'amount'  : pg.amount,
                              'type'   	: pg.type,
                              'speeds'	: pg.speeds,
                              'more_info' @flex}
                 FROM   port_group_final pg WITH INSERT UPDATE DELETE
                 WHERE  p.prod_id = pg.prod_id ]}
FROM product_final p WITH INSERT UPDATE DELETE;

CREATE OR replace json relational DUALITY VIEW product_final_dv AS
product_final @insert @update @delete
{
	_id	    		: prod_id
    type 			: type
    name   			: name
    description		: description
    manufacturer	: manufacturer
    price			: price
    more_info  		@flex
	port_group_final @insert @update @delete
	{
		pogr_id	: pogr_id
		amount  : amount
		type 	: type
		speeds 	: speeds
		more_info  @flex
	}
};

-- ---------------------------------------------------------------------------------------
-- INSERT
-- ---------------------------------------------------------------------------------------

INSERT INTO product_final_dv d (data)
VALUES ('
{
        "type": "network switch",
        "name": "Fritz A16",
        "description": "unmanaged 16 port network switch",
        "manufacturer": "ABC",
        "price": 100,
        "port_group": [
            {
                "amount": 16,
                "type": "RJ45",
                "speeds": "10/100/1000"
            }
        ]
    }');

INSERT INTO product_final_dv d (data)
VALUES ('
{
        "type": "router/firewall",
        "name": "Hans A48",
        "description": "48 port HA firewall with advanced filtering, VPN, reverse proxy and docker support",
        "manufacturer": "ABC",
        "price": 500,
        "port_group": [
            {   "amount": 16,
                "type": "RJ45",
                "speeds": "10/100/1000",
                "poe": {"modes": ["active", "passive"],
                    "volt": [24, 48]}
            },
            {
                "amount": 16,
                "type": "SFP+",
                "speeds": "1000/40000/100000"
            },
            {
                "amount": 16,
                "type": "SFP",
                "speeds": "1000/10000"
            }
        ],
        "feature": [
            {
                "name": "VLAN",
                "amount": 4094
            },
            {
                "name": "QoS",
                "amount": 8
            },
            {
                "name": "routing",
                "protocols": "static, RIP, OSPF, BGP, EGP",
                "table_size": 1000
            },
            {
                "name": "firewall",
                "type": "stateful, stateless",
                "amount_of_rules": 1000,
                "amount_of_connections": 100000,
                "amount_of_nat_rules": 1000,
                "feature": [
                    {
                        "name": "URL filtering",
                        "types": "whitelist, blacklist",
                        "amount_of_rules": 1000
                    },
                    {
                        "name": "application filtering",
                        "types": "whitelist",
                        "amount_of_rules": 1000
                    },
                    {
                        "name": "content filtering",
                        "types": "blacklist",
                        "amount_of_rules": 1000
                    },
                    {
                        "name": "anti-virus",
                        "ssl_inspection": true
                    }
                ]
            },
            {
                "name": "VPN",
                "type": "IPsec, SSL, L2TP, PPTP",
                "amount_of_tunnels": 1000,
                "amount_of_users": 1000,
                "feature": [
                    {
                        "name": "IPsec",
                        "type": "IKEv1, IKEv2",
                        "amount_of_tunnels": 1000,
                        "amount_of_users": 1000
                    },
                    {
                        "name": "SSL",
                        "amount_of_tunnels": 1000,
                        "amount_of_users": 1000
                    },
                    {
                        "name": "L2TP",
                        "amount_of_tunnels": 1000,
                        "amount_of_users": 1000
                    },
                    {
                        "name": "PPTP",
                        "amount_of_tunnels": 1000,
                        "amount_of_users": 1000
                    }
                ]
            },
            {
                "name": "network access control",
                "type": "MAC based authentication, 802.1x",
                "vlan_support": true
            }
        ]
    }');

COMMIT;

--
-- SELECT 
--

SELECT *
FROM product_final_dv;

SELECT *
FROM product_final;

SELECT *
FROM port_group_final;